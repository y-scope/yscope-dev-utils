version: "3"

set: ["u", "pipefail"]
shopt: ["globstar"]

tasks:
  # Runs the CMake build step for the given build directory. The caller must have previously called
  # `cmake-generate` on `BUILD_DIR` for this task to succeed. We purposely omit `sources` and
  # `generates` as we defer to `cmake` to decide whether it should perform any actions.
  #
  # @param {string} BUILD_DIR Directory containing the generated build system to use.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the build command.
  # @param {int} [JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the native build tool's default number is used. See `man cmake`.
  # @param {string[]} [TARGETS] A list of specific targets to build instead of the default target.
  cmake-build:
    internal: true
    label: "{{.TASK}}:{{.BUILD_DIR}}-{{.TARGETS}}-{{.EXTRA_ARGS}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
      JOBS: >-
        {{default "" .JOBS}}
      TARGETS:
        ref: "default (list) .TARGETS"
    requires:
      vars: ["BUILD_DIR"]
    cmds:
      - >-
        cmake
        --build "{{.BUILD_DIR}}"
        --parallel "{{.JOBS}}"
        {{- range .TARGETS}}
        --target="{{.}}"
        {{- end}}
        {{- range .EXTRA_ARGS}}
        "{{.}}"
        {{- end}}

  # Runs the CMake clean target for the given build directory. The caller must have previously
  # called `cmake-generate` on `BUILD_DIR` for this task to succeed.
  #
  # @param {string} BUILD_DIR Directory containing the generated buildsystem to use.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass with the clean target.
  cmake-clean:
    internal: true
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["BUILD_DIR"]
    cmds:
      - task: "cmake-build"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          EXTRA_ARGS:
            ref: ".EXTRA_ARGS"
          TARGETS: ["clean"]

  # Runs the CMake generate step for the given source and build directories. We purposely omit
  # `sources` and `generates` as we defer to `cmake` to decide whether it should perform any
  # actions.
  #
  # @param {string} BUILD_DIR Directory in which to generate the build system.
  # @param {string} SOURCE_DIR Project source directory containing the CMakeLists.txt file.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the generate command.
  cmake-generate:
    internal: true
    label: "{{.TASK}}:{{.SOURCE_DIR}}-{{.BUILD_DIR}}-{{.EXTRA_ARGS}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["BUILD_DIR", "SOURCE_DIR"]
    cmds:
      - >-
        cmake
        -S "{{.SOURCE_DIR}}"
        -B "{{.BUILD_DIR}}"
        {{- range .EXTRA_ARGS}}
        "{{.}}"
        {{- end}}

  # Runs the CMake install step for the given build directory. The caller must have previously
  # called `cmake-build` on `BUILD_DIR` for this task to succeed. We purposely omit `sources` and
  # `generates` as we defer to `cmake` to decide whether it should perform any actions.
  #
  # @param {string} BUILD_DIR Directory containing the completed build to use.
  # @param {string} INSTALL_PREFIX Path prefix of where the project should be installed.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the install command.
  cmake-install:
    internal: true
    label: "{{.TASK}}:{{.BUILD_DIR}}-{{.INSTALL_PREFIX}}-{{.EXTRA_ARGS}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["BUILD_DIR", "INSTALL_PREFIX"]
    cmds:
      - >-
        cmake
        --install "{{.BUILD_DIR}}"
        --prefix "{{.INSTALL_PREFIX}}"
        {{- range .EXTRA_ARGS}}
        "{{.}}"
        {{- end}}

  # Downloads a CMake project tar file from `URL` and then generates, builds, and installs the
  # project. We purposely omit `sources` and `generates` as we defer to `cmake` to decide whether it
  # should perform any actions. However, the download and extraction will be skipped if unnecessary.
  #
  # @param {string} FILE_SHA256 Content hash to verify the downloaded tar file against.
  # @param {string} NAME Project name (used in directory names).
  # @param {string} URL
  # @param {string[]} [BUILD_ARGS] Any additional arguments to pass to the CMake build command.
  # @param {string} [BUILD_DIR={{.WORK_DIR}}/{{.NAME}}-build] Directory in which to generate the
  # build system and perform the build.
  # @param {string[]} [GEN_ARGS] Any additional arguments to pass to the CMake generate command.
  # @param {string[]} [INSTALL_ARGS] Any additional arguments to pass to the CMake install command.
  # @param {string} [INSTALL_PREFIX={{.WORK_DIR}}/{{.NAME}}-install] Path prefix of where the
  # project should be installed.
  # @param {int} [JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the native build tool's default number is used. See `man cmake`.
  # @param {string} [SOURCE_DIR={{.WORK_DIR}}/{{.NAME}}-src] Directory in which to extract the tar
  # file.
  # @param {string[]} [TARGETS] A list of specific targets to build instead of the default target.
  # @param {string} [WORK_DIR={{.TASK_DIR}}] Base directory to store the build, install, and src
  # directories inside.
  cmake-install-remote-tar:
    internal: true
    label: "{{.TASK}}:{{.NAME}}-{{.URL}}-{{.INSTALL_PREFIX}}"
    vars:
      # Paths
      WORK_DIR: >-
        {{default .ROOT_DIR .WORK_DIR}}
      BUILD_DIR: >-
        {{default (printf "%s/%s-build" .WORK_DIR .NAME) .BUILD_DIR}}
      INSTALL_PREFIX: >-
        {{default (printf "%s/%s-install" .WORK_DIR .NAME) .INSTALL_PREFIX}}
      SOURCE_DIR: >-
        {{default (printf "%s/%s-src" .WORK_DIR .NAME) .SOURCE_DIR}}

      # Optional CMake arguments
      BUILD_ARGS:
        ref: "default (list) .BUILD_ARGS"
      GEN_ARGS:
        ref: "default (list) .GEN_ARGS"
      INSTALL_ARGS:
        ref: "default (list) .INSTALL_ARGS"
      JOBS: >-
        {{default "" .JOBS}}
      TARGETS:
        ref: "default (list) .TARGETS"
    requires:
      vars: ["FILE_SHA256", "NAME", "URL"]
    deps:
      - task: ":utils:download-and-extract-tar"
        vars:
          FILE_SHA256: "{{.FILE_SHA256}}"
          OUTPUT_DIR: "{{.SOURCE_DIR}}"
          URL: "{{.URL}}"
    cmds:
      - task: ":utils:cmake-generate"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          EXTRA_ARGS:
            ref: ".GEN_ARGS"
          SOURCE_DIR: "{{.SOURCE_DIR}}"
      - task: ":utils:cmake-build"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          EXTRA_ARGS:
            ref: ".BUILD_ARGS"
          JOBS: "{{.JOBS}}"
          TARGETS:
            ref: ".TARGETS"
      - task: ":utils:cmake-install"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          EXTRA_ARGS:
            ref: ".INSTALL_ARGS"
          INSTALL_PREFIX: "{{.INSTALL_PREFIX}}"
