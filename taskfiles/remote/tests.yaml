version: "3"

includes:
  remote: "../../exports/taskfiles/utils/remote.yaml"

vars:
  # Test zip file info
  G_TEST_COMMIT_HASH: "fd7c42dd7b59f8f4ab0eccba5078393e10cddb00"
  G_TEST_ZIP_FILE_SHA256: "141e807e9b4b9e28c254165c5a402ff54c0c9d3f9153178dfcff5354ace0c3d4"
  G_TEST_ZIP_FILE_URL: >-
    https://github.com/y-scope/yscope-dev-utils/archive/{{.G_TEST_COMMIT_HASH}}.zip

  # Extracted test zip file contents
  G_EXTRACTED_ZIP_DIR: "yscope-dev-utils-{{.G_TEST_COMMIT_HASH}}"
  G_EXTRACTED_ZIP_CODEOWNERS_PATH: "{{.G_EXTRACTED_ZIP_DIR}}/.github/CODEOWNERS"
  G_EXTRACTED_ZIP_LICENSE_PATH: "{{.G_EXTRACTED_ZIP_DIR}}/LICENSE"
  G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH: >-
    {{.G_EXTRACTED_ZIP_DIR}}/.github/PULL_REQUEST_TEMPLATE.md

tasks:
  default:
    internal: true
    cmds:
      - task: "curl-test-success"
      - task: "download-and-extract-zip-test-basic"
      - task: "download-and-extract-zip-test-exclusions"
      - task: "download-and-extract-zip-test-inclusions"

  curl-test-success:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
      OUTPUT_FILE: "{{.OUTPUT_DIR}}.zip"
    cmds:
      - task: "remote-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:curl"
        vars:
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"
          OUTPUT_FILE: "{{.OUTPUT_FILE}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
      - |-
        diff \
          <(echo "{{.G_TEST_ZIP_FILE_SHA256}}") \
          <(openssl dgst -sha256 "{{.OUTPUT_FILE}}" | awk '{print $2}')

  curl-test-success-skip:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
      OUTPUT_FILE: "{{.OUTPUT_DIR}}.zip"
      OUTPUT_FILE_MOD_TS: "{{.CHECKSUM_FILE}}-mod-ts.txt"
    cmds:
      - task: "remote-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:curl"
        vars:
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"
          OUTPUT_FILE: "{{.OUTPUT_FILE}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
      - "date -r '{{.OUTPUT_FILE}}' > '{{.OUTPUT_FILE_MOD_TS}}'"
      - task: "remote:curl"
        vars:
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"
          OUTPUT_FILE: "{{.OUTPUT_FILE}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
      - |-
        diff \
          <(echo "{{.G_TEST_ZIP_FILE_SHA256}}") \
          <(openssl dgst -sha256 "{{.OUTPUT_FILE}}" | awk '{print $2}')
      - "diff '{{.OUTPUT_FILE_MOD_TS}}' <(date -r '{{.OUTPUT_FILE}}')"

  download-and-extract-zip-test-basic:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
    cmds:
      - task: "remote-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:download-and-extract-zip"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"

      # Test that an expected file exists
      - "diff -q '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_LICENSE_PATH}}' '{{.ROOT_DIR}}/LICENSE'"

      # Test that the output files are in the expected locations
      - "test -e '{{.OUTPUT_DIR}}.md5'"
      - "test -e '{{.OUTPUT_DIR}}.zip'"

  download-and-extract-zip-test-exclusions:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
    cmds:
      - task: "remote-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:download-and-extract-zip"
        vars:
          EXCLUDE_PATTERNS:
            - "*/CODEOWNERS"
            - "{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"

      # Test that the excluded files don't exist
      - "test ! -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_CODEOWNERS_PATH}}'"
      - "test ! -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}'"

      # Test that other files do exist
      - "test -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_LICENSE_PATH}}'"

  download-and-extract-zip-test-inclusions:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
    cmds:
      - task: "remote-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:download-and-extract-zip"
        vars:
          INCLUDE_PATTERNS:
            - "*/CODEOWNERS"
            - "{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"

      # Test that only the included files exist
      - "test ! -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_LICENSE_PATH}}'"
      - "test -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_CODEOWNERS_PATH}}'"
      - "test -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}'"

  # Cleans up the files output by remote tasks (assuming their default paths weren't changed).
  #
  # @param {string} OUTPUT_DIR Output directory passed to remote tasks.
  remote-test-cleaner:
    internal: true
    requires:
      vars: ["OUTPUT_DIR"]
    cmds:
      - "rm -rf '{{.OUTPUT_DIR}}'"
      - "rm -f '{{.OUTPUT_DIR}}.md5'"
      - "rm -f '{{.OUTPUT_DIR}}.zip'"
