version: "3"

includes:
  remote: "../../exports/taskfiles/utils/remote.yaml"

vars:
  G_EXTRACTED_ZIP_CODEOWNERS_PATH: "yscope-dev-utils-main/.github/CODEOWNERS"
  G_EXTRACTED_ZIP_LICENSE_PATH: "yscope-dev-utils-main/LICENSE"
  G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH: >-
    yscope-dev-utils-main/.github/PULL_REQUEST_TEMPLATE.md
  G_TEST_ZIP_FILE_SHA256: "2c9a21f83484e004c41c28be759451dbdc787190eb044365ba58f7bb846418f6"
  G_TEST_ZIP_FILE_URL: "https://github.com/y-scope/yscope-dev-utils/archive/refs/heads/main.zip"

tasks:
  default:
    internal: true
    cmds:
      - task: "download-and-extract-zip-test-basic"
      - task: "download-and-extract-zip-test-exclusions"
      - task: "download-and-extract-zip-test-inclusions"

  download-and-extract-zip-test-basic:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
    cmds:
      - task: "download-and-extract-zip-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:download-and-extract-zip"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"

      # Test that an expected file exists
      - "diff -q '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_LICENSE_PATH}}' '{{.ROOT_DIR}}/LICENSE'"

      # Test that the output files are in the expected locations
      - "test -e '{{.OUTPUT_DIR}}.md5'"
      - "test -e '{{.OUTPUT_DIR}}.zip'"

  download-and-extract-zip-test-exclusions:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
    cmds:
      - task: "download-and-extract-zip-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:download-and-extract-zip"
        vars:
          EXCLUDE_PATTERNS:
            - "*/CODEOWNERS"
            - "{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"

      # Test that the excluded files don't exist
      - "test ! -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_CODEOWNERS_PATH}}'"
      - "test ! -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}'"

      # Test that other files do exist
      - "test -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_LICENSE_PATH}}'"

  download-and-extract-zip-test-inclusions:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
    cmds:
      - task: "download-and-extract-zip-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
      - task: "remote:download-and-extract-zip"
        vars:
          INCLUDE_PATTERNS:
            - "*/CODEOWNERS"
            - "{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"

      # Test that only the included files exist
      - "test ! -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_LICENSE_PATH}}'"
      - "test -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_CODEOWNERS_PATH}}'"
      - "test -e '{{.OUTPUT_DIR}}/{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}'"

  download-and-extract-zip-test-checksum-exclude:
    vars:
      OUTPUT_DIR: "{{.G_OUTPUT_DIR}}/{{.TASK | replace \":\" \"#\"}}"
      CHECKSUM_FILE: "{{.OUTPUT_DIR}}.md5"
    cmds:
      - task: "download-and-extract-zip-test-cleaner"
        vars:
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"

      # Download the zip file, extract all files, and compute the checksum with some exclude
      # patterns.
      - task: "remote:download-and-extract-zip"
        vars:
          CHECKSUM_EXCLUDE_PATTERNS: &checksum_exclude_patterns
            - ".github/CODEOWNERS"
            - ".github/PULL_REQUEST_TEMPLATE.md"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"
      - "mv '{{.CHECKSUM_FILE}}' '{{.CHECKSUM_FILE}}.ref'"

      # Download the zip file again, extract files excluding some files, and compute the checksum
      # with the same exclude patterns.
      - task: "remote:download-and-extract-zip"
        vars:
          CHECKSUM_EXCLUDE_PATTERNS: *checksum_exclude_patterns
          EXCLUDE_PATTERNS:
            - "*/CODEOWNERS"
            - "{{.G_EXTRACTED_ZIP_PULL_REQUEST_TEMPLATE_PATH}}"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          URL: "{{.G_TEST_ZIP_FILE_URL}}"
          FILE_SHA256: "{{.G_TEST_ZIP_FILE_SHA256}}"

      # Test that the checksum file was created and matches the reference checksum file.
      - "diff -q '{{.CHECKSUM_FILE}}' '{{.CHECKSUM_FILE}}.ref'"

  # Cleans up the files output by download-and-extract-zip (assuming their default paths weren't
  # changed).
  #
  # @param {string} OUTPUT_DIR Output directory passed to download-and-extract-zip.
  download-and-extract-zip-test-cleaner:
    internal: true
    requires:
      vars: ["OUTPUT_DIR"]
    cmds:
      - "rm -rf '{{.OUTPUT_DIR}}'"
      - "rm -f '{{.OUTPUT_DIR}}.md5'"
      - "rm -f '{{.OUTPUT_DIR}}.zip'"
