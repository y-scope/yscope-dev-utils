version: "3"

includes:
  remote: "remote.yaml"

set: ["u", "pipefail"]
shopt: ["globstar"]

tasks:
  # Runs the bootstrap.sh generate step in the given source directory. Boost only supports
  # in-source generation and building.
  #
  # @param {string} SOURCE_DIR Project source directory.
  # @param {string} INSTALL_PREFIX Path prefix of where the project should be installed.
  # @param {string[]} TARGETS Target libraries to build.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the generate command.
  generate:
    internal: true
    dir: "{{.SOURCE_DIR}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["SOURCE_DIR", "INSTALL_PREFIX", "TARGETS"]
    cmds:
      - >-
        ./bootstrap.sh
        --prefix="{{.INSTALL_PREFIX}}"
        --exec-prefix="{{.INSTALL_PREFIX}}"
        --with-libraries={{(join "," .TARGETS)}}
        {{- range .EXTRA_ARGS}}
        "{{.}}"
        {{- end}}

  # Runs the b2 build step for boost. The caller must have previously called `generate` on
  # `SOURCE_DIR` for this task to succeed.
  #
  # @param {string} SOURCE_DIR Directory containing the boost source.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the build command.
  # @param {int} [JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the b2 default number is used. Before 1.76.0, the number was 1. Since 1.76.0, the
  # default is the number of cores.
  build:
    internal: true
    dir: "{{.SOURCE_DIR}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
      JOBS: >-
        {{default "" .JOBS}}
    requires:
      vars: ["SOURCE_DIR"]
    cmds:
      - >-
        ./b2
        {{- range .EXTRA_ARGS}}
        "{{.}}"
        {{- end}}
        {{- if .JOBS}}
        "-j{{.JOBS}}"
        {{- end}}

  # Runs the b2 install step for boost. The caller must have previously called `build` on
  # `SOURCE_DIR` for this task to succeed. If `CMAKE_SETTINGS_DIR` is set, a settings file will be
  # created in that directory, containing a `boost_ROOT` CMake variable that points to
  # `INSTALL_PREFIX`.
  #
  # @param {string} SOURCE_DIR Directory containing the boost source.
  # @param {string} INSTALL_PREFIX Path prefix of where the project should be installed.
  # @param {string} [CMAKE_SETTINGS_DIR] If set, the directory where the project's CMake settings
  # file should be stored.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the install command.
  install:
    internal: true
    dir: "{{.SOURCE_DIR}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
      INSTALL_PREFIX: >-
        {{default "" .INSTALL_PREFIX}}
      CMAKE_SETTINGS_DIR: >-
        {{default "" .CMAKE_SETTINGS_DIR}}
    requires:
      vars: ["SOURCE_DIR", "INSTALL_PREFIX"]
    cmds:
      - >-
        ./b2
        install
        {{- range .EXTRA_ARGS}}
        "{{.}}"
        {{- end}}
      - >-
        {{- if .CMAKE_SETTINGS_DIR}}
          cat <<EOF >> "{{.CMAKE_SETTINGS_DIR}}/boost.cmake"
          set(Boost_ROOT "{{.INSTALL_PREFIX}}" CACHE PATH "Package root for boost.")
          EOF
        {{- end}}
  # Downloads boost from `URL` and installs boost.
  #
  # General parameters
  # @param {string} [WORK_DIR={{.TASK_DIR}}] Base directory to store the install and src
  # directories inside.
  # @param {string} [SOURCE_DIR={{.WORK_DIR}}/boost-src] Directory in which to extract the tar
  # file.
  #
  # Download parameters
  # @param {string} FILE_SHA256 Content hash to verify the downloaded tar file against.
  # @param {string} URL
  #
  # Boost generate parameters
  # @param {string} [INSTALL_PREFIX={{.WORK_DIR}}/boost-install] Path prefix of where the project
  # should be installed.
  # @param {string[]} TARGETS Target libraries to build.
  # @param {string[]} [GEN_ARGS] Any additional arguments to pass to the generate command.
  #
  # Boost build parameters
  # @param {int} [JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the b2 default number is used. Before 1.76.0, the number was 1. Since 1.76.0, the
  # default is the number of cores.
  # @param {string[]} [BUILD_ARGS] Any additional arguments to pass to the build command.
  #
  # Boost install parameters
  # @param {string[]} [INSTALL_ARGS] Any additional arguments to pass to the install command.
  # @param {string} [CMAKE_SETTINGS_DIR] If set, the directory where the project's CMake settings
  # file should be stored.
  download-and-install:
    internal: true
    label: "{{.TASK}}:{{.URL}}-{{.INSTALL_PREFIX}}"
    vars:
      # General parameters
      WORK_DIR: >-
        {{default .ROOT_DIR .WORK_DIR}}
      SOURCE_DIR: >-
        {{default (printf "%s/boost-src" .WORK_DIR) .SOURCE_DIR}}

      # Boost generate parameters
      INSTALL_PREFIX: >-
        {{default (printf "%s/boost-install" .WORK_DIR) .INSTALL_PREFIX}}
      TARGETS:
        ref: "default (list) .TARGETS"
      GEN_ARGS:
        ref: "default (list) .GEN_ARGS"

      # Boost build parameters
      BUILD_ARGS:
        ref: "default (list) .BUILD_ARGS"
      JOBS: >-
        {{default "" .JOBS}}

      # Boost install parameters
      INSTALL_ARGS:
        ref: "default (list) .INSTALL_ARGS"
      CMAKE_SETTINGS_DIR: >-
        {{default "" .CMAKE_SETTINGS_DIR}}
    requires:
      vars: ["FILE_SHA256", "URL"]
    deps:
      - task: "remote:download-and-extract-tar"
        vars:
          FILE_SHA256: "{{.FILE_SHA256}}"
          OUTPUT_DIR: "{{.SOURCE_DIR}}"
          URL: "{{.URL}}"
    cmds:
      - task: "generate"
        vars:
          SOURCE_DIR: "{{.SOURCE_DIR}}"
          INSTALL_PREFIX: "{{.INSTALL_PREFIX}}"
          TARGETS:
            ref: ".TARGETS"
          EXTRA_ARGS:
            ref: ".GEN_ARGS"
      - task: "build"
        vars:
          SOURCE_DIR: "{{.SOURCE_DIR}}"
          JOBS: "{{.JOBS}}"
          EXTRA_ARGS:
            ref: ".BUILD_ARGS"
      - task: "install"
        vars:
          SOURCE_DIR: "{{.SOURCE_DIR}}"
          INSTALL_PREFIX: "{{.INSTALL_PREFIX}}"
          CMAKE_SETTINGS_DIR: "{{.CMAKE_SETTINGS_DIR}}"
          EXTRA_ARGS:
            ref: ".INSTALL_ARGS"
