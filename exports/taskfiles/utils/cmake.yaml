version: "3"

includes:
  remote: "remote.yaml"

set: ["u", "pipefail"]
shopt: ["globstar"]

tasks:
  # Runs the CMake build step for the given build directory. The caller must have previously called
  # `generate` on `BUILD_DIR` for this task to succeed. We purposely omit `sources` and `generates`
  # as we defer to `cmake` to decide whether it should perform any actions.
  #
  # @param {string} BUILD_DIR Directory containing the generated build system to use.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the build command.
  # @param {int} [JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the native build tool's default number is used. See `man cmake`.
  # @param {string[]} [TARGETS] A list of specific targets to build instead of the default target.
  build:
    internal: true
    label: "{{.TASK}}:{{.BUILD_DIR}}-{{.TARGETS}}-{{.EXTRA_ARGS}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
      JOBS: >-
        {{default "" .JOBS}}
      TARGETS:
        ref: "default (list) .TARGETS"
    requires:
      vars: ["BUILD_DIR"]
    cmds:
      - >-
        cmake
        --build "{{.BUILD_DIR}}"
        --parallel "{{.JOBS}}"
        {{- range .TARGETS}}
        --target="{{.}}"
        {{- end}}
        {{- range .EXTRA_ARGS}}
        {{.}}
        {{- end}}

  # Runs the CMake clean target for the given build directory. The caller must have previously
  # called `generate` on `BUILD_DIR` for this task to succeed.
  #
  # @param {string} BUILD_DIR Directory containing the generated buildsystem to use.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass with the clean target.
  clean:
    internal: true
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["BUILD_DIR"]
    cmds:
      - task: "build"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          EXTRA_ARGS:
            ref: ".EXTRA_ARGS"
          TARGETS: ["clean"]

  # Runs the CMake generate step for the given source and build directories. We purposely omit
  # `sources` and `generates` as we defer to `cmake` to decide whether it should perform any
  # actions.
  #
  # @param {string} BUILD_DIR Directory in which to generate the build system.
  # @param {string} SOURCE_DIR Project source directory containing the CMakeLists.txt file.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the generate command.
  generate:
    internal: true
    label: "{{.TASK}}:{{.SOURCE_DIR}}-{{.BUILD_DIR}}-{{.EXTRA_ARGS}}"
    vars:
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["BUILD_DIR", "SOURCE_DIR"]
    cmds:
      - >-
        cmake
        -S "{{.SOURCE_DIR}}"
        -B "{{.BUILD_DIR}}"
        {{- range .EXTRA_ARGS}}
        {{.}}
        {{- end}}

  # Runs the CMake install step for the given build directory. The caller must have previously
  # called `build` on `BUILD_DIR` for this task to succeed. If `CMAKE_SETTINGS_DIR` is set, a
  # settings file will be created in that directory, containing a `{{.CMAKE_PACKAGE_NAME}}_ROOT`
  # CMake variable that points to `INSTALL_PREFIX`.
  #
  # NOTE: We purposely omit `sources` and `generates` as we defer to `cmake` to decide whether it
  # should perform any actions.
  #
  # @param {string} BUILD_DIR Directory containing the completed build to use.
  # @param {string} INSTALL_PREFIX Path prefix of where the project should be installed.
  # @param {string} [CMAKE_PACKAGE_NAME] CMake project name (used in directory names and the CMake
  # settings file). Required if `CMAKE_SETTINGS_DIR` is set.
  # @param {string} [CMAKE_SETTINGS_DIR] If set, the directory where the project's CMake settings
  # file should be stored.
  # @param {string[]} [EXTRA_ARGS] Any additional arguments to pass to the install command.
  install:
    internal: true
    label: "{{.TASK}}:{{.BUILD_DIR}}-{{.INSTALL_PREFIX}}-{{.EXTRA_ARGS}}"
    vars:
      CMAKE_SETTINGS_DIR: >-
        {{default "" .CMAKE_SETTINGS_DIR}}
      EXTRA_ARGS:
        ref: "default (list) .EXTRA_ARGS"
    requires:
      vars: ["BUILD_DIR", "INSTALL_PREFIX"]
    preconditions:
      - sh: >-
          {{if .CMAKE_SETTINGS_DIR}}
            {{not (empty .CMAKE_PACKAGE_NAME)}}
          {{end}}
        msg: |-
          CMAKE_PACKAGE_NAME must be set if CMAKE_SETTINGS_DIR is set.
          CMAKE_SETTINGS_DIR: {{.CMAKE_SETTINGS_DIR}}
    cmds:
      - >-
        cmake
        --install "{{.BUILD_DIR}}"
        --prefix "{{.INSTALL_PREFIX}}"
        {{- range .EXTRA_ARGS}}
        {{.}}
        {{- end}}
      - >-
        {{- if .CMAKE_SETTINGS_DIR}}
          echo "set({{.CMAKE_PACKAGE_NAME}}_ROOT
            \"{{.INSTALL_PREFIX}}\"
            CACHE PATH
            \"Package root for {{.CMAKE_PACKAGE_NAME}}.\"
          )" >> "{{.CMAKE_SETTINGS_DIR}}/{{.CMAKE_PACKAGE_NAME}}.cmake"
        {{- end}}

  # Downloads a CMake project tar file from `TAR_URL` and then generates, builds, and installs the
  # project. We purposely omit `sources` and `generates` as we defer to `cmake` to decide whether it
  # should perform any actions. However, the download and extraction will be skipped if unnecessary.
  #
  # Required parameters
  # @param {string} CMAKE_PACKAGE_NAME CMake package name.
  # @param {string} TAR_SHA256 Content hash to verify the downloaded tar file against.
  # @param {string} TAR_URL URL of the tar file to download.
  # @param {string} WORK_DIR Directory in which to store the build, install, and source directories.
  #
  # CMake parameters
  # @param {string[]} [CMAKE_BUILD_ARGS] Any additional arguments to pass to the CMake build
  # command.
  # @param {string[]} [CMAKE_GEN_ARGS] Any additional arguments to pass to the CMake generate
  # command.
  # @param {string[]} [CMAKE_INSTALL_ARGS] Any additional arguments to pass to the CMake install
  # command.
  # @param {int} [CMAKE_JOBS] The maximum number of concurrent processes to use when building. If
  # omitted, the native build tool's default number is used. See `man cmake`.
  # @param {string} [CMAKE_SETTINGS_DIR] The directory where the project's CMake settings file
  # should be stored.
  # @param {string[]} [CMAKE_TARGETS] A list of specific targets to build instead of the default
  # target.
  # @param {string} [CMAKE_SOURCE_DIR] Optional path, relative to SRC_DIR, specifying a custom
  # CMake source directory to pass to the CMake generate command.
  install-remote-tar:
    internal: true
    label: "{{.TASK}}:{{.CMAKE_PACKAGE_NAME}}-{{.TAR_URL}}-{{.INSTALL_PREFIX}}"
    vars:
      # CMake parameters
      CMAKE_BUILD_ARGS:
        ref: "default (list) .CMAKE_BUILD_ARGS"
      CMAKE_GEN_ARGS:
        ref: "default (list) .CMAKE_GEN_ARGS"
      CMAKE_INSTALL_ARGS:
        ref: "default (list) .CMAKE_INSTALL_ARGS"
      CMAKE_JOBS: >-
        {{default "" .CMAKE_JOBS}}
      CMAKE_SETTINGS_DIR: >-
        {{default "" .CMAKE_SETTINGS_DIR}}
      CMAKE_TARGETS:
        ref: "default (list) .CMAKE_TARGETS"
      CMAKE_SOURCE_DIR: >-
        {{default "." .CMAKE_SOURCE_DIR}}

      # Directory parameters
      BUILD_DIR: "{{.WORK_DIR}}/{{.CMAKE_PACKAGE_NAME}}-build"
      INSTALL_PREFIX: "{{.WORK_DIR}}/{{.CMAKE_PACKAGE_NAME}}-install"
      SOURCE_DIR: "{{.WORK_DIR}}/{{.CMAKE_PACKAGE_NAME}}-src"

    requires:
      vars: ["CMAKE_PACKAGE_NAME", "TAR_SHA256", "TAR_URL", "WORK_DIR"]
    deps:
      - task: "remote:download-and-extract-tar"
        vars:
          FILE_SHA256: "{{.TAR_SHA256}}"
          OUTPUT_DIR: "{{.SOURCE_DIR}}"
          URL: "{{.TAR_URL}}"
    cmds:
      - task: "generate"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          EXTRA_ARGS:
            ref: ".CMAKE_GEN_ARGS"
          SOURCE_DIR: "{{.SOURCE_DIR}}/{{.CMAKE_SOURCE_DIR}}"
      - task: "build"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          EXTRA_ARGS:
            ref: ".CMAKE_BUILD_ARGS"
          JOBS: "{{.CMAKE_JOBS}}"
          TARGETS:
            ref: ".CMAKE_TARGETS"
      - task: "install"
        vars:
          BUILD_DIR: "{{.BUILD_DIR}}"
          CMAKE_PACKAGE_NAME: "{{.CMAKE_PACKAGE_NAME}}"
          CMAKE_SETTINGS_DIR: "{{.CMAKE_SETTINGS_DIR}}"
          EXTRA_ARGS:
            ref: ".CMAKE_INSTALL_ARGS"
          INSTALL_PREFIX: "{{.INSTALL_PREFIX}}"

  # Sets up all CMake dependencies for a project by:
  #
  # 1. creating a directory to contain all CMake settings files (CMAKE_SETTINGS_DIR).
  # 2. installing all dependencies by running `DEP_TASK`.
  # 3. combining each dependency's settings file into a single settings file (CMAKE_SETTINGS_FILE)
  #    for use inside a CMake project.
  #
  # @param {string} CMAKE_SETTINGS_DIR The directory where CMake settings files should be stored.
  # @param {string} DEP_TASK The task to run that will install all dependencies. NOTE:
  # - The task name must be qualified from the root of the project.
  # - The task must not require any arguments (to use a task with arguments create a new task that
  #   calls the original with any arguments set).
  # - Dependencies must write their settings file to CMAKE_SETTINGS_DIR in order to have them
  #   included in CMAKE_SETTINGS_FILE.
  # @param {string} [CMAKE_SETTINGS_FILE={{.CMAKE_SETTINGS_DIR}}/all.cmake] The file in which to
  # combine each dependency's settings file.
  install-deps-and-generate-settings:
    internal: true
    label: "{{.TASK}}:{{.CMAKE_SETTINGS_DIR}}-{{.DEP_TASK}}"
    vars:
      CMAKE_SETTINGS_FILE: >-
        {{default (printf "%s/all.cmake" .CMAKE_SETTINGS_DIR) .CMAKE_SETTINGS_FILE}}
    requires:
      vars: ["CMAKE_SETTINGS_DIR", "DEP_TASK"]
    cmds:
      - "rm -rf {{.CMAKE_SETTINGS_DIR}}"
      - "mkdir -p {{.CMAKE_SETTINGS_DIR}}"

      # NOTE: We prefix DEP_TASK with `::` assuming that this taskfile is included through the
      # `utils` taskfile, and that in turn is included in the user's taskfile.
      - task: "::{{.DEP_TASK}}"
      - |-
        for file in {{.CMAKE_SETTINGS_DIR}}/*.cmake; do
          if [[ "$file" != "{{.CMAKE_SETTINGS_FILE}}" ]]; then
            echo "include(\"$file\")" >> "{{.CMAKE_SETTINGS_FILE}}";
          fi
        done
